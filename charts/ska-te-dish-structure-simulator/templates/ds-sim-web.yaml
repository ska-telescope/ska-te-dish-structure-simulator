---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{include "ds-sim.fullname" .}}
  labels:
    {{- include "ds-sim.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ include "ds-sim.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "ds-sim.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "ds-sim.image" . }}
          imagePullPolicy: {{ include "ds-sim.pullPolicy" . }}
          volumeMounts:
           - name: config
             mountPath: /home/simulator/config/application.yml
             subPath: application.yml
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.serviceSettings.httpPort }}
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "ds-sim.fullname" . }}-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "ds-sim.labels" . | nindent 4 }}
  name: {{ .Values.serviceSettings.name }}
spec:
  externalName: {{ .Values.serviceSettings.name }}
  ports:
  - name: server
    protocol: TCP
    port: {{ .Values.serviceSettings.httpPort }}
    targetPort: {{ .Values.serviceSettings.httpPort }}
    {{- if eq .Values.env.type "dev"  }}
    nodePort: {{ .Values.serviceSettings.httpNodePort }}
    {{- end }}
  - name: discover
    protocol: TCP
    port: {{ .Values.serviceSettings.discoverPort }}
    targetPort: {{ .Values.serviceSettings.discoverPort }}
    {{- if eq .Values.env.type "dev"  }}
    nodePort: {{ .Values.serviceSettings.discoverNodePort }}
    {{- end }}
  - name: opcua
    protocol: TCP
    port: {{ .Values.serviceSettings.opcuaPort }}
    targetPort: {{ .Values.serviceSettings.opcuaPort }}
    {{- if eq .Values.env.type "dev"  }}
    nodePort: {{ .Values.serviceSettings.opcuaNodePort }}
    {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "ds-sim.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  type: {{ include "ds-sim.serviceType" . }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{include "ds-sim.fullname" .}}-ingress
  labels:
    {{- include "ds-sim.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /{{ .Release.Namespace }}/webds/(.*)
        backend:
          service:
            name: {{ .Values.serviceSettings.name }}
            port:
              name: server
        pathType: ImplementationSpecific
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ds-sim.fullname" . }}-config
data:
  application.yml: |-
    server:
      port: {{ .Values.serviceSettings.httpPort }}
    logging:
      config: ./config/logback-spring.xml
    opcUa:
      server:
        tcp:
          port: {{ .Values.serviceSettings.discoverPort }}
      clientIP:
        EGUI: 192.168.1.1
        LMC: 192.168.1.2

